// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v5.29.3
// source: rule-test/api/test.proto

package ruletest

import (
	_ "google.golang.org/genproto/googleapis/api/annotations"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	emptypb "google.golang.org/protobuf/types/known/emptypb"
	_ "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoadTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ParallelCount uint64 `protobuf:"varint,1,opt,name=parallel_count,json=parallelCount,proto3" json:"parallel_count,omitempty"`
	CycleAmount   uint64 `protobuf:"varint,2,opt,name=cycle_amount,json=cycleAmount,proto3" json:"cycle_amount,omitempty"`
}

func (x *LoadTestRequest) Reset() {
	*x = LoadTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_test_api_test_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *LoadTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoadTestRequest) ProtoMessage() {}

func (x *LoadTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_test_api_test_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoadTestRequest.ProtoReflect.Descriptor instead.
func (*LoadTestRequest) Descriptor() ([]byte, []int) {
	return file_rule_test_api_test_proto_rawDescGZIP(), []int{0}
}

func (x *LoadTestRequest) GetParallelCount() uint64 {
	if x != nil {
		return x.ParallelCount
	}
	return 0
}

func (x *LoadTestRequest) GetCycleAmount() uint64 {
	if x != nil {
		return x.CycleAmount
	}
	return 0
}

type EfficiencyTestRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	CycleAmount uint64 `protobuf:"varint,1,opt,name=cycle_amount,json=cycleAmount,proto3" json:"cycle_amount,omitempty"`
}

func (x *EfficiencyTestRequest) Reset() {
	*x = EfficiencyTestRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_rule_test_api_test_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EfficiencyTestRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EfficiencyTestRequest) ProtoMessage() {}

func (x *EfficiencyTestRequest) ProtoReflect() protoreflect.Message {
	mi := &file_rule_test_api_test_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EfficiencyTestRequest.ProtoReflect.Descriptor instead.
func (*EfficiencyTestRequest) Descriptor() ([]byte, []int) {
	return file_rule_test_api_test_proto_rawDescGZIP(), []int{1}
}

func (x *EfficiencyTestRequest) GetCycleAmount() uint64 {
	if x != nil {
		return x.CycleAmount
	}
	return 0
}

var File_rule_test_api_test_proto protoreflect.FileDescriptor

var file_rule_test_api_test_proto_rawDesc = []byte{
	0x0a, 0x18, 0x72, 0x75, 0x6c, 0x65, 0x2d, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x61, 0x70, 0x69, 0x2f,
	0x74, 0x65, 0x73, 0x74, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x18, 0x62, 0x61, 0x6e, 0x64,
	0x69, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75, 0x6c, 0x65,
	0x74, 0x65, 0x73, 0x74, 0x1a, 0x1f, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x1b, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x65, 0x6d, 0x70, 0x74, 0x79, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x1a, 0x1c, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x61, 0x70, 0x69, 0x2f, 0x61,
	0x6e, 0x6e, 0x6f, 0x74, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x73, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x22, 0x5b, 0x0a, 0x0f, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75,
	0x65, 0x73, 0x74, 0x12, 0x25, 0x0a, 0x0e, 0x70, 0x61, 0x72, 0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x5f,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0d, 0x70, 0x61, 0x72,
	0x61, 0x6c, 0x6c, 0x65, 0x6c, 0x43, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x5f, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04,
	0x52, 0x0b, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3a, 0x0a,
	0x15, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x63, 0x79, 0x63, 0x6c, 0x65, 0x5f,
	0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x79,
	0x63, 0x6c, 0x65, 0x41, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x32, 0xf9, 0x01, 0x0a, 0x0f, 0x52, 0x75,
	0x6c, 0x65, 0x54, 0x65, 0x73, 0x74, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x69, 0x0a,
	0x0a, 0x44, 0x6f, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x12, 0x29, 0x2e, 0x62, 0x61,
	0x6e, 0x64, 0x69, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72, 0x75,
	0x6c, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x4c, 0x6f, 0x61, 0x64, 0x54, 0x65, 0x73, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x18,
	0x82, 0xd3, 0xe4, 0x93, 0x02, 0x12, 0x3a, 0x01, 0x2a, 0x1a, 0x0d, 0x2f, 0x76, 0x31, 0x2f, 0x74,
	0x65, 0x73, 0x74, 0x2f, 0x6c, 0x6f, 0x61, 0x64, 0x12, 0x7b, 0x0a, 0x10, 0x44, 0x6f, 0x45, 0x66,
	0x66, 0x69, 0x63, 0x69, 0x65, 0x6e, 0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x12, 0x2f, 0x2e, 0x62,
	0x61, 0x6e, 0x64, 0x69, 0x74, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x73, 0x2e, 0x72,
	0x75, 0x6c, 0x65, 0x74, 0x65, 0x73, 0x74, 0x2e, 0x45, 0x66, 0x66, 0x69, 0x63, 0x69, 0x65, 0x6e,
	0x63, 0x79, 0x54, 0x65, 0x73, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x16, 0x2e,
	0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e,
	0x45, 0x6d, 0x70, 0x74, 0x79, 0x22, 0x1e, 0x82, 0xd3, 0xe4, 0x93, 0x02, 0x18, 0x3a, 0x01, 0x2a,
	0x1a, 0x13, 0x2f, 0x76, 0x31, 0x2f, 0x74, 0x65, 0x73, 0x74, 0x2f, 0x65, 0x66, 0x66, 0x69, 0x63,
	0x69, 0x65, 0x6e, 0x63, 0x79, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2f, 0x72, 0x75, 0x6c, 0x65, 0x74,
	0x65, 0x73, 0x74, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_rule_test_api_test_proto_rawDescOnce sync.Once
	file_rule_test_api_test_proto_rawDescData = file_rule_test_api_test_proto_rawDesc
)

func file_rule_test_api_test_proto_rawDescGZIP() []byte {
	file_rule_test_api_test_proto_rawDescOnce.Do(func() {
		file_rule_test_api_test_proto_rawDescData = protoimpl.X.CompressGZIP(file_rule_test_api_test_proto_rawDescData)
	})
	return file_rule_test_api_test_proto_rawDescData
}

var file_rule_test_api_test_proto_msgTypes = make([]protoimpl.MessageInfo, 2)
var file_rule_test_api_test_proto_goTypes = []interface{}{
	(*LoadTestRequest)(nil),       // 0: bandit.services.ruletest.LoadTestRequest
	(*EfficiencyTestRequest)(nil), // 1: bandit.services.ruletest.EfficiencyTestRequest
	(*emptypb.Empty)(nil),         // 2: google.protobuf.Empty
}
var file_rule_test_api_test_proto_depIdxs = []int32{
	0, // 0: bandit.services.ruletest.RuleTestService.DoLoadTest:input_type -> bandit.services.ruletest.LoadTestRequest
	1, // 1: bandit.services.ruletest.RuleTestService.DoEfficiencyTest:input_type -> bandit.services.ruletest.EfficiencyTestRequest
	2, // 2: bandit.services.ruletest.RuleTestService.DoLoadTest:output_type -> google.protobuf.Empty
	2, // 3: bandit.services.ruletest.RuleTestService.DoEfficiencyTest:output_type -> google.protobuf.Empty
	2, // [2:4] is the sub-list for method output_type
	0, // [0:2] is the sub-list for method input_type
	0, // [0:0] is the sub-list for extension type_name
	0, // [0:0] is the sub-list for extension extendee
	0, // [0:0] is the sub-list for field type_name
}

func init() { file_rule_test_api_test_proto_init() }
func file_rule_test_api_test_proto_init() {
	if File_rule_test_api_test_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_rule_test_api_test_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*LoadTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_rule_test_api_test_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EfficiencyTestRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_rule_test_api_test_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   2,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_rule_test_api_test_proto_goTypes,
		DependencyIndexes: file_rule_test_api_test_proto_depIdxs,
		MessageInfos:      file_rule_test_api_test_proto_msgTypes,
	}.Build()
	File_rule_test_api_test_proto = out.File
	file_rule_test_api_test_proto_rawDesc = nil
	file_rule_test_api_test_proto_goTypes = nil
	file_rule_test_api_test_proto_depIdxs = nil
}
